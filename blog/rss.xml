<?xml version="1.0" encoding="utf-8"?><?xml-stylesheet type="text/xsl" href="rss.xsl"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>HRP3.0 Blog</title>
        <link>https://chenrihong.github.io/blog</link>
        <description>HRP3.0 Blog</description>
        <lastBuildDate>Wed, 04 Dec 2024 00:00:00 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>zh</language>
        <item>
            <title><![CDATA[解决KeepAlive缓存问题]]></title>
            <link>https://chenrihong.github.io/blog/2024/12/04/解决 keep-alive 缓存问题</link>
            <guid>https://chenrihong.github.io/blog/2024/12/04/解决 keep-alive 缓存问题</guid>
            <pubDate>Wed, 04 Dec 2024 00:00:00 GMT</pubDate>
            <description><![CDATA[背景]]></description>
            <content:encoded><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="背景">背景<a href="https://chenrihong.github.io/blog/2024/12/04/%E8%A7%A3%E5%86%B3%20keep-alive%20%E7%BC%93%E5%AD%98%E9%97%AE%E9%A2%98#%E8%83%8C%E6%99%AF" class="hash-link" aria-label="背景的直接链接" title="背景的直接链接">​</a></h2>
<p>我司的系统是采用 Vue3.0 框架，前后分离模式，用页签来加载路由，且需要缓存这些页签，以防切换回来时数据丢失。所以采用了 keep-alive。</p>
<p>随之而来的是内存占用高的问题，用户用着用着，内存就超过1GB，初期甚至到2到3GB以上。经过一系统优化，内存还是1GB以上，客户现场用360浏览器还会白屏。</p>
<p>因为浏览器内存限制，360会切到兼容模式，导致白屏。谷歌浏览器则会崩溃。</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="动态路由配置">动态路由配置<a href="https://chenrihong.github.io/blog/2024/12/04/%E8%A7%A3%E5%86%B3%20keep-alive%20%E7%BC%93%E5%AD%98%E9%97%AE%E9%A2%98#%E5%8A%A8%E6%80%81%E8%B7%AF%E7%94%B1%E9%85%8D%E7%BD%AE" class="hash-link" aria-label="动态路由配置的直接链接" title="动态路由配置的直接链接">​</a></h2>
<p>动态路由组件，要缓存，需要配置路由的 <code>key=route.fullPath</code>。</p>
<div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain">router</span><span class="token operator" style="color:#393A34">-</span><span class="token plain">view v</span><span class="token operator" style="color:#393A34">-</span><span class="token plain">slot</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"{ Component, route }"</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain">transition </span><span class="token operator" style="color:#393A34">:</span><span class="token plain">name</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"subsystemConfig.routerAnimate"</span><span class="token plain"> appear</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain">keep</span><span class="token operator" style="color:#393A34">-</span><span class="token plain">alive </span><span class="token operator" style="color:#393A34">:</span><span class="token plain">max</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"5"</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain">component </span><span class="token operator" style="color:#393A34">:</span><span class="token plain">is</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"Component"</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">:</span><span class="token plain">key</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"route.fullPath"</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">/</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token operator" style="color:#393A34">/</span><span class="token plain">keep</span><span class="token operator" style="color:#393A34">-</span><span class="token plain">alive</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token operator" style="color:#393A34">/</span><span class="token plain">transition</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">&lt;</span><span class="token operator" style="color:#393A34">/</span><span class="token plain">router</span><span class="token operator" style="color:#393A34">-</span><span class="token plain">view</span><span class="token operator" style="color:#393A34">&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>随之带来的问题是，关闭页签时，无法释放组件。</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="返回一个全新组件实例">返回一个全新组件实例<a href="https://chenrihong.github.io/blog/2024/12/04/%E8%A7%A3%E5%86%B3%20keep-alive%20%E7%BC%93%E5%AD%98%E9%97%AE%E9%A2%98#%E8%BF%94%E5%9B%9E%E4%B8%80%E4%B8%AA%E5%85%A8%E6%96%B0%E7%BB%84%E4%BB%B6%E5%AE%9E%E4%BE%8B" class="hash-link" aria-label="返回一个全新组件实例的直接链接" title="返回一个全新组件实例的直接链接">​</a></h2>
<p>返回新组件，同时可以对组件命名，以方便使用 <code>keep-alive </code>的 <code>include</code> 配置</p>
<div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain">router</span><span class="token operator" style="color:#393A34">-</span><span class="token plain">view v</span><span class="token operator" style="color:#393A34">-</span><span class="token plain">slot</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"{ Component, route }"</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain">transition </span><span class="token operator" style="color:#393A34">:</span><span class="token plain">name</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"subsystemConfig.routerAnimate"</span><span class="token plain"> appear</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain">keep</span><span class="token operator" style="color:#393A34">-</span><span class="token plain">alive </span><span class="token operator" style="color:#393A34">:</span><span class="token plain">include</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"includesArr"</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">:</span><span class="token plain">max</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"5"</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain">component </span><span class="token operator" style="color:#393A34">:</span><span class="token plain">is</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"wrap(Component, route)"</span><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token operator" style="color:#393A34">:</span><span class="token plain">key</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"route.query.__id || route.path"</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">/</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token operator" style="color:#393A34">/</span><span class="token plain">keep</span><span class="token operator" style="color:#393A34">-</span><span class="token plain">alive</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token operator" style="color:#393A34">/</span><span class="token plain">transition</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">&lt;</span><span class="token operator" style="color:#393A34">/</span><span class="token plain">router</span><span class="token operator" style="color:#393A34">-</span><span class="token plain">view</span><span class="token operator" style="color:#393A34">&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>wrap:</p>
<div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">wrap</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter literal-property property" style="color:#36acaa">component</span><span class="token parameter operator" style="color:#393A34">:</span><span class="token parameter"> any</span><span class="token parameter punctuation" style="color:#393A34">,</span><span class="token parameter"> </span><span class="token parameter literal-property property" style="color:#36acaa">route</span><span class="token parameter operator" style="color:#393A34">:</span><span class="token parameter"> any</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> query </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> route</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> key </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> query</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">__id</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword control-flow" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">!</span><span class="token plain">key</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token plain"> component</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword control-flow" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">key </span><span class="token operator" style="color:#393A34">===</span><span class="token plain"> </span><span class="token keyword null nil" style="color:#00009f">null</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token console class-name">console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">error</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'__id is null'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> wrapper</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword control-flow" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">cachedWrapperComponents</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">has</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">key</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        wrapper </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">cachedWrapperComponents</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">get</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">key</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#00009f">else</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        wrapper </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">defineComponent</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token literal-property property" style="color:#36acaa">name</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> key</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token function-variable function" style="color:#d73a49">render</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:#393A34">=&gt;</span><span class="token plain"> component</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">includesArr</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">push</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">key</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">cachedWrapperComponents</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">set</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">key</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> wrapper</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token plain"> wrapper</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="页签关闭时清理-includesarr-数组">页签关闭时清理 includesArr 数组<a href="https://chenrihong.github.io/blog/2024/12/04/%E8%A7%A3%E5%86%B3%20keep-alive%20%E7%BC%93%E5%AD%98%E9%97%AE%E9%A2%98#%E9%A1%B5%E7%AD%BE%E5%85%B3%E9%97%AD%E6%97%B6%E6%B8%85%E7%90%86-includesarr-%E6%95%B0%E7%BB%84" class="hash-link" aria-label="页签关闭时清理 includesArr 数组的直接链接" title="页签关闭时清理 includesArr 数组的直接链接">​</a></h2>
<p>在页签关闭时，清理 <code>includesArr</code>，以使用 <code>keep-alive</code> 自动清理组件缓存。</p>
<p>到这里，我们以为能做都做了，全部交给 <code>Vue</code> 框架就行，事实是，所有组件的  <code>unmounted</code> 钩子都没有触发。内存占用还是很高。</p>
<p>直到最近，用户发现缓存导致保存数据失败问题，我们重新审视这一块功能。</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="终局">终局<a href="https://chenrihong.github.io/blog/2024/12/04/%E8%A7%A3%E5%86%B3%20keep-alive%20%E7%BC%93%E5%AD%98%E9%97%AE%E9%A2%98#%E7%BB%88%E5%B1%80" class="hash-link" aria-label="终局的直接链接" title="终局的直接链接">​</a></h2>
<p>我们同事发现，先对 includesArr 清理再关闭路由，不会触发组件<code>unmounted</code> 钩子。</p>
<p>而关闭时，先把路由切走，再去清理 includesArr 会触发组件 <code>unmounted</code> 钩子。</p>
<p>如此，我觉得应该是正常了，我们可以在 <code>unmounted</code> 中写一些释放内存的代码了。</p>]]></content:encoded>
            <category>思考</category>
        </item>
        <item>
            <title><![CDATA[低代码要素]]></title>
            <link>https://chenrihong.github.io/blog/welcome</link>
            <guid>https://chenrihong.github.io/blog/welcome</guid>
            <pubDate>Sat, 30 Nov 2024 00:00:00 GMT</pubDate>
            <description><![CDATA[如何构建一个简单高效的低代码系统]]></description>
            <content:encoded><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="如何构建一个简单高效的低代码系统">如何构建一个简单高效的低代码系统<a href="https://chenrihong.github.io/blog/welcome#%E5%A6%82%E4%BD%95%E6%9E%84%E5%BB%BA%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E9%AB%98%E6%95%88%E7%9A%84%E4%BD%8E%E4%BB%A3%E7%A0%81%E7%B3%BB%E7%BB%9F" class="hash-link" aria-label="如何构建一个简单高效的低代码系统的直接链接" title="如何构建一个简单高效的低代码系统的直接链接">​</a></h2>
<p>要明白一点，低代码只能解决一些常见界面。而不是所有界面。而增删改查是常见的。我想要的低代码系统就是这一个能快速搭建增删改查的系统。暂时不和工作流绑定。</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="增删改查低代码系统组成的主要要素">增删改查低代码系统组成的主要要素<a href="https://chenrihong.github.io/blog/welcome#%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5%E4%BD%8E%E4%BB%A3%E7%A0%81%E7%B3%BB%E7%BB%9F%E7%BB%84%E6%88%90%E7%9A%84%E4%B8%BB%E8%A6%81%E8%A6%81%E7%B4%A0" class="hash-link" aria-label="增删改查低代码系统组成的主要要素的直接链接" title="增删改查低代码系统组成的主要要素的直接链接">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="表格">表格<a href="https://chenrihong.github.io/blog/welcome#%E8%A1%A8%E6%A0%BC" class="hash-link" aria-label="表格的直接链接" title="表格的直接链接">​</a></h3>
<p>表格是查询数据的载体，常见的表格元素配置有：</p>
<ol>
<li>表格数据接口</li>
<li>表格列头配置</li>
<li>表格操作按钮</li>
<li>表格的分页器</li>
<li>表格查询条件</li>
<li>表格的行操作</li>
</ol>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="按钮">按钮<a href="https://chenrihong.github.io/blog/welcome#%E6%8C%89%E9%92%AE" class="hash-link" aria-label="按钮的直接链接" title="按钮的直接链接">​</a></h3>
<p>按钮是界面交互中最常见元素，主要有</p>
<ol>
<li>表格中的查询按钮</li>
<li>表格中的新增按钮</li>
<li>表格中行操作中编辑按钮</li>
<li>表格中行操作的删除按钮</li>
<li>表格行操作中其他功能的按钮</li>
</ol>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="表单">表单<a href="https://chenrihong.github.io/blog/welcome#%E8%A1%A8%E5%8D%95" class="hash-link" aria-label="表单的直接链接" title="表单的直接链接">​</a></h3>
<p>表单是系统收集数据的常用元素，需要实现的配置功能有</p>
<ol>
<li>表单的列</li>
<li>表单的排列方式，先实现按分栏排列</li>
<li>表单的必填项，数据校验项（支持正则）</li>
<li>表单的中的组件若干</li>
<li>表单的通用保存按钮</li>
</ol>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="进阶组件配置">进阶组件配置<a href="https://chenrihong.github.io/blog/welcome#%E8%BF%9B%E9%98%B6%E7%BB%84%E4%BB%B6%E9%85%8D%E7%BD%AE" class="hash-link" aria-label="进阶组件配置的直接链接" title="进阶组件配置的直接链接">​</a></h3>
<ol>
<li>表格条件间的级联，例如省市组联</li>
<li>表单间字段中互相级联</li>
<li>表单中的流水编号生成规则</li>
<li>表单父级字段选择</li>
</ol>
<p>初步实现一个低代码系统，实现简单的增删改查。</p>]]></content:encoded>
            <category>思考</category>
        </item>
    </channel>
</rss>